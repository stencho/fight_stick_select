# 1 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino"
# 2 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino" 2

//#include <Adafruit_GFX.h>
# 5 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino" 2

# 7 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino" 2
//#include <splash.h>

# 10 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino" 2

# 12 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino" 2
# 13 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino" 2
# 14 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino" 2





// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)

Adafruit_SSD1306 display(128 /* OLED display width, in pixels*/, 32 /* OLED display height, in pixels*/, &Wire, -1 /* Reset pin # (or -1 if sharing Arduino reset pin)*/);

//SD CARD
Sd2Card card;
SdVolume volume;
SdFile root;
const int chipSelect = 4;



Adafruit_NeoPixel strip(2, 5, ((1 << 6) | (1 << 4) | (0 << 2) | (2)) /*|< Transmit as G,R,B*/ + 0x0000 /*|< 800 KHz data transmission*/);



static const unsigned char logo_bmp[] = {
0x00, 0x00, 0x80, 0x7C, 0xC0, 0x05, 0x38, 0x00, 0x00, 0x01, 0xF1, 0x00, 0x40, 0x18, 0x06, 0x00,
0x00, 0x03, 0x86, 0x00, 0x80, 0x10, 0x10, 0x00, 0x00, 0x08, 0x80, 0x00, 0x80, 0x90, 0x03, 0x00,
0x00, 0x60, 0xD8, 0x01, 0x81, 0x60, 0x09, 0x00, 0x00, 0x80, 0xF0, 0x01, 0xE1, 0x06, 0x01, 0x00,
0x03, 0x00, 0x60, 0x03, 0xE3, 0x90, 0x09, 0x00, 0x0E, 0x00, 0x00, 0x01, 0x3E, 0x98, 0x08, 0x00,
0x1C, 0x00, 0x40, 0x07, 0x0F, 0xC0, 0x09, 0x00, 0x3C, 0x00, 0xC0, 0x0F, 0x19, 0xC0, 0x09, 0x00,
0x7C, 0x00, 0x80, 0x23, 0x3C, 0xE0, 0x03, 0x00, 0x38, 0x01, 0x84, 0x33, 0x24, 0xF8, 0x02, 0x00,
0x78, 0x01, 0xD0, 0x07, 0x2C, 0xFC, 0x02, 0x00, 0x78, 0x03, 0x30, 0x0F, 0x29, 0xFE, 0x17, 0x00,
0x38, 0x03, 0x50, 0x07, 0x59, 0xFF, 0x01, 0x00, 0x30, 0x03, 0x60, 0x07, 0x53, 0xFF, 0x00, 0x80,
0x70, 0x03, 0x30, 0x06, 0x33, 0xFE, 0x00, 0x80, 0x70, 0x01, 0x10, 0x07, 0xC3, 0xFF, 0x00, 0x40,
0x70, 0x00, 0x80, 0x07, 0x83, 0xFF, 0x00, 0x40, 0x70, 0x00, 0x00, 0x07, 0x0F, 0xFF, 0x00, 0x20,
0x70, 0x00, 0x00, 0x23, 0xFF, 0xFF, 0x80, 0x20, 0x70, 0x08, 0x00, 0x37, 0xFF, 0xFE, 0x00, 0x10,
0x78, 0x04, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x10, 0x28, 0x37, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00,
0x3C, 0x3F, 0xC0, 0x7F, 0xFF, 0xF8, 0x00, 0x08, 0x32, 0x3F, 0xFF, 0xFF, 0xFF, 0xFA, 0x40, 0x08,
0x12, 0x7F, 0xF7, 0xFF, 0xFF, 0xE3, 0x20, 0x08, 0x0F, 0xFF, 0xE8, 0x3F, 0xFF, 0x84, 0x80, 0x04,
0x0F, 0xFF, 0xDF, 0x0F, 0xFC, 0x18, 0x00, 0x04, 0x03, 0xFF, 0x94, 0x41, 0x04, 0x00, 0x00, 0x04,
0x01, 0xFF, 0xC4, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup() {
    Serial.begin(115200);
  strip.begin();

  if (!card.init(SPI_HALF_SPEED, chipSelect)) {
    Serial.println("Failed.");

    for(;;); // Don't proceed, loop forever
  } else {
    Serial.println("Wiring is correct and a card is present.");
  }

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(0x02 /*|< Gen. display voltage from 3.3V*/, 0x3C, false)) { // Address 0x3C for 128x32
    Serial.println((reinterpret_cast<const __FlashStringHelper *>(("SSD1306 allocation failed"))));
    digitalWrite(13, (0x0));
    for(;;); // Don't proceed, loop forever
  }
  display.dim(true);

  //RGB lighting
  strip.setPixelColor(0, 250,0,170);
  strip.setPixelColor(1, 250,0,170);
  strip.show();
}


uint16_t drawRGB24toRGB565(uint8_t r, uint8_t g, uint8_t b)
{
  return ((r / 8) << 11) | ((g / 4) << 5) | (b / 8);
}

void loop() {

  display.clearDisplay();
  display.setTextSize(6);
  display.setTextColor(drawRGB24toRGB565(250, 0, 120));
  //display.setCursor(0,0);
  display.setRotation(0);

  //display.drawChar(0, 20, 'L', WHITE,  BLACK, 1);

  //display.drawBitmap(-13,0-i, logo_bmp, 64, 32, BLACK, WHITE);
  //display.drawBitmap(-13,32-i, logo_bmp, 64, 32, BLACK, WHITE);
  //display.drawBitmap(-13,64-i, logo_bmp, 64, 32, BLACK, WHITE);
  //display.drawBitmap(-13,96-i, logo_bmp, 64, 32, BLACK, WHITE);
  //display.drawBitmap(-13,128-i, logo_bmp, 64, 32, BLACK, WHITE);
  display.display();

  //i++;

}
