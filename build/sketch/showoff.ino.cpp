#include <Arduino.h>
#line 1 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino"
#include <Adafruit_NeoPixel.h>

//#include <Adafruit_GFX.h>
#include <gfxfont.h>

#include <Adafruit_SSD1306.h>
//#include <splash.h>

#include <Adafruit_NeoPixel.h>

#include <SPI.h>
#include <SD.h>
#include <Wire.h>


#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

//SD CARD
Sd2Card card;
SdVolume volume;
SdFile root;
const int chipSelect = 4;


#define LED_PIN 5
Adafruit_NeoPixel strip(2, LED_PIN, NEO_GRB + NEO_KHZ800);

#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16
static const unsigned char PROGMEM logo_bmp[] = {
0x00, 0x00, 0x80, 0x7C, 0xC0, 0x05, 0x38, 0x00, 0x00, 0x01, 0xF1, 0x00, 0x40, 0x18, 0x06, 0x00,
0x00, 0x03, 0x86, 0x00, 0x80, 0x10, 0x10, 0x00, 0x00, 0x08, 0x80, 0x00, 0x80, 0x90, 0x03, 0x00,
0x00, 0x60, 0xD8, 0x01, 0x81, 0x60, 0x09, 0x00, 0x00, 0x80, 0xF0, 0x01, 0xE1, 0x06, 0x01, 0x00,
0x03, 0x00, 0x60, 0x03, 0xE3, 0x90, 0x09, 0x00, 0x0E, 0x00, 0x00, 0x01, 0x3E, 0x98, 0x08, 0x00,
0x1C, 0x00, 0x40, 0x07, 0x0F, 0xC0, 0x09, 0x00, 0x3C, 0x00, 0xC0, 0x0F, 0x19, 0xC0, 0x09, 0x00,
0x7C, 0x00, 0x80, 0x23, 0x3C, 0xE0, 0x03, 0x00, 0x38, 0x01, 0x84, 0x33, 0x24, 0xF8, 0x02, 0x00,
0x78, 0x01, 0xD0, 0x07, 0x2C, 0xFC, 0x02, 0x00, 0x78, 0x03, 0x30, 0x0F, 0x29, 0xFE, 0x17, 0x00,
0x38, 0x03, 0x50, 0x07, 0x59, 0xFF, 0x01, 0x00, 0x30, 0x03, 0x60, 0x07, 0x53, 0xFF, 0x00, 0x80,
0x70, 0x03, 0x30, 0x06, 0x33, 0xFE, 0x00, 0x80, 0x70, 0x01, 0x10, 0x07, 0xC3, 0xFF, 0x00, 0x40,
0x70, 0x00, 0x80, 0x07, 0x83, 0xFF, 0x00, 0x40, 0x70, 0x00, 0x00, 0x07, 0x0F, 0xFF, 0x00, 0x20,
0x70, 0x00, 0x00, 0x23, 0xFF, 0xFF, 0x80, 0x20, 0x70, 0x08, 0x00, 0x37, 0xFF, 0xFE, 0x00, 0x10,
0x78, 0x04, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x10, 0x28, 0x37, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00,
0x3C, 0x3F, 0xC0, 0x7F, 0xFF, 0xF8, 0x00, 0x08, 0x32, 0x3F, 0xFF, 0xFF, 0xFF, 0xFA, 0x40, 0x08,
0x12, 0x7F, 0xF7, 0xFF, 0xFF, 0xE3, 0x20, 0x08, 0x0F, 0xFF, 0xE8, 0x3F, 0xFF, 0x84, 0x80, 0x04,
0x0F, 0xFF, 0xDF, 0x0F, 0xFC, 0x18, 0x00, 0x04, 0x03, 0xFF, 0x94, 0x41, 0x04, 0x00, 0x00, 0x04,
0x01, 0xFF, 0xC4, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00
};

#line 54 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino"
void setup();
#line 81 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino"
uint16_t drawRGB24toRGB565(uint8_t r, uint8_t g, uint8_t b);
#line 86 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino"
void loop();
#line 54 "C:\\Users\\nat\\Documents\\Arduino\\fightstick\\showoff\\showoff.ino"
void setup() {
    Serial.begin(115200);
  strip.begin();
  
  if (!card.init(SPI_HALF_SPEED, chipSelect)) {    
    Serial.println("Failed.");

    for(;;); // Don't proceed, loop forever
  } else {
    Serial.println("Wiring is correct and a card is present.");        
  }

  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C, false)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));
    digitalWrite(13, LOW);
    for(;;); // Don't proceed, loop forever
  }
  display.dim(true);
  
  //RGB lighting
  strip.setPixelColor(0, 250,0,170);
  strip.setPixelColor(1, 250,0,170);
  strip.show();
}


uint16_t drawRGB24toRGB565(uint8_t r, uint8_t g, uint8_t b)
{
  return ((r / 8) << 11) | ((g / 4) << 5) | (b / 8);
}

void loop() {
  
  display.clearDisplay();
  display.setTextSize(6);
  display.setTextColor(drawRGB24toRGB565(250, 0, 120));
  //display.setCursor(0,0);
  display.setRotation(0);
  
  //display.drawChar(0, 20, 'L', WHITE,  BLACK, 1);

  //display.drawBitmap(-13,0-i, logo_bmp, 64, 32, BLACK, WHITE);
  //display.drawBitmap(-13,32-i, logo_bmp, 64, 32, BLACK, WHITE);
  //display.drawBitmap(-13,64-i, logo_bmp, 64, 32, BLACK, WHITE);
  //display.drawBitmap(-13,96-i, logo_bmp, 64, 32, BLACK, WHITE);
  //display.drawBitmap(-13,128-i, logo_bmp, 64, 32, BLACK, WHITE);
  display.display();

  //i++;
  
}
